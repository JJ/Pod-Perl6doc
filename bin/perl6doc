#!/usr/bin/env perl6
use v6;

my class PerlFile {
    has $!module;
    has $.pod;
    has $.pm;
    submethod BUILD(:$module) {
        my $path = (-> $_ { .subst(:g, '::', '/') })($module);
        for @*INC -> $inc is copy {
            next unless $inc ~~ Str;
            $inc ~~ s/^.*\#//;
            my @found = (
                <pm6 pm pod>.map({"$inc/$path.$_"}).Slip,
                "$inc/Type/$path.pod",
                "$inc/Language/$path.pod",
            ).grep({.IO.r});
            next unless @found;
            if @found.grep(/pod$/) -> @f {
                # prefer *.pod for pod
                $!pod = @f[0];
            } else {
                $!pod = @found[0];
            }
            $!pm = @found[0];
            last;
        }
    }
    method found() { so $!pm }
}

multi sub MAIN(Str $module, Bool :$l, Bool :$m) {
    my $perl-file = PerlFile.new(:$module);
    if $perl-file.found {
        if $l {
            say $perl-file.pm;
        } elsif $m {
            with-pager(file => $perl-file.pm);
        } else {
            temp %*ENV<POD_TO_TEXT_ANSI> = 1.Str;
            with-pager(command => "$*EXECUTABLE --doc {$perl-file.pod}");
        }
    } else {
        my $message = $m ?? qq/No module found for "$module"./
                         !! qq/No documentation found for "$module"./;
        note $message;
        exit 1;
    }
}

sub USAGE() {
    require Pod::To::Text;
    say ::("Pod::To::Text").render($=pod);
}

sub with-pager(:$command, :$file) {
    my $pager = $*ENV<PAGER>:exists ?? $*ENV<PAGER> !! "less";
    temp %*ENV<LESS> = %*ENV<LESS>:exists ?? "%*ENV<LESS> -R" !! "-R" if $pager ~~ /less$/;
    if $file {
        shell "$pager $file";
    } elsif $command {
        shell "$command | $pager";
    }
}

=begin pod

=head1 NAME

perl6pod - perldoc for Perl6

=head1 SYNOPSIS

  > perl6doc [OPTIONS] MODULE

  OPTIONS:
  -l  Display the module's file name
  -m  Display module's file in its entirety
  -h  Show this help

  EXAMPLES:
  > perl6doc File::Find
  > perl6doc -m Panda::Builder
  > perl6doc -l Pod::To::Text

  # for perl6/doc content
  > perl6doc Proc::Async
  > perl6doc 5to6-perlfunc

=end pod
